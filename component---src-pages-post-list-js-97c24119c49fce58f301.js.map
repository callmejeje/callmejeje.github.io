{"version":3,"file":"component---src-pages-post-list-js-97c24119c49fce58f301.js","mappings":"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","sources":["webpack://oreum-blog-gatsby/./src/components/Categories/styles.js","webpack://oreum-blog-gatsby/./src/components/Categories/index.js","webpack://oreum-blog-gatsby/./src/hooks/use-site-allmarkdown.js","webpack://oreum-blog-gatsby/./src/hooks/use-site-category.js","webpack://oreum-blog-gatsby/./src/pages/post-list.js","webpack://oreum-blog-gatsby/./src/templates/BoardTemplate/styles.js","webpack://oreum-blog-gatsby/./src/components/Pagination/styles.js","webpack://oreum-blog-gatsby/./src/components/Pagination/index.js","webpack://oreum-blog-gatsby/./src/templates/BoardTemplate/index.js"],"sourcesContent":["import styled from \"styled-components\";\nimport theme from \"../../styles/theme\";\n\nexport const Container = styled.section`\n  font-size: 1rem;\n  margin-right: 50px;\n  h1 {\n    width: 200px;\n    font-size: 1.1rem;\n    padding-bottom: 10px;\n    border-bottom: 1px solid var(--textNormal);\n  }\n  ul {\n    margin-top: 10px;\n    border: 0 none;\n    white-space: normal;\n    height: auto;\n    li {\n      line-height: 25px;\n    }\n    a.active {\n      font-weight: 700;\n      color: #6300eb;\n    }\n  }\n  @media ${theme.mobile} {\n    margin-right: 0;\n    h1 {\n      display: none;\n    }\n    ul {\n      border-top: 1px solid var(--textNormal);\n      border-bottom: 1px solid var(--textNormal);\n      padding: 9px 1.45rem 7px 1.45rem;\n      overflow-x: auto;\n      overflow-y: hidden;\n      height: 45px;\n      white-space: nowrap;\n      -ms-overflow-style: none;\n      &::-webkit-scrollbar {\n        display: none;\n      }\n      li {\n        display: inline-block;\n        margin-right: 15px;\n        :last-child {\n          margin-right: 0;\n        }\n        .count {\n          display: none;\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { Container } from \"./styles\";\n\nconst Categories = ({ data }) => {\n  const postList = data.group;\n  const totalCount = data.totalCount;\n\n  return (\n    <Container className=\"category\">\n      <h1>Category</h1>\n      <ul>\n        <li>\n          <Link to=\"/post-list\" activeClassName=\"active\">\n            전체보기 <span className=\"count\">({totalCount})</span>\n          </Link>\n        </li>\n        {postList.map((post) => {\n          const { id } = post.edges[0].node;\n          return (\n            <li key={id}>\n              <Link\n                to={\"/post-list/\" + post.fieldValue.replace(/\\s/g, \"-\")}\n                activeClassName=\"active\"\n              >\n                {post.fieldValue}\n                <span className=\"count\">({post.totalCount})</span>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </Container>\n  );\n};\n\nexport default Categories;\n","import { useStaticQuery, graphql } from \"gatsby\";\n\nexport const useSitePostdata = () => {\n  const data = useStaticQuery(\n    graphql`\n      query SitePostQuery {\n        allMarkdownRemark {\n          edges {\n            node {\n              id\n              excerpt(format: PLAIN)\n              fields {\n                slug\n              }\n              frontmatter {\n                date\n                title\n                category\n                imgPath {\n                  childImageSharp {\n                    fluid {\n                      originalImg\n                      originalName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `\n  );\n\n  let datas = data.allMarkdownRemark.edges.map((data) => {\n    const newPost = {\n      id: data.node.id,\n      title: data.node.frontmatter.title,\n      category: data.node.frontmatter.category,\n      date: data.node.frontmatter.date,\n      imgPath: data.node.frontmatter.imgPath,\n      contents: data.node.excerpt,\n      slug: data.node.fields.slug,\n    };\n    return newPost;\n  });\n  return datas;\n};\n","import { useStaticQuery, graphql } from \"gatsby\";\n\nexport const useCategory = () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark(limit: 2000) {\n          group(field: frontmatter___category) {\n            fieldValue\n            totalCount\n            edges {\n              node {\n                id\n              }\n            }\n          }\n          totalCount\n        }\n      }\n    `\n  );\n  return data.allMarkdownRemark;\n};\n","import React from \"react\";\nimport Categories from \"../components/Categories\";\n\nimport { useCategory } from \"../hooks/use-site-category\";\nimport { useSitePostdata } from \"../hooks/use-site-allmarkdown\";\nimport BoardPage from \"../templates/BoardTemplate\";\nimport { Provider } from \"react-redux\";\nimport { legacy_createStore as createStore } from \"redux\";\n\nconst isBrowser = typeof window !== \"undefined\";\nconst themeReducer = (\n  state = isBrowser ? localStorage.getItem(\"theme\") : \"light\",\n  action\n) => {\n  switch (action.type) {\n    case \"CHANGETHEME\":\n      return state === \"dark\" ? \"light\" : \"dark\";\n    default:\n      return state;\n  }\n};\nconst store = createStore(themeReducer);\n\nfunction PostListPage() {\n  let categories = useCategory();\n  let datas = useSitePostdata();\n\n  return (\n    <Provider store={store}>\n      <BoardPage allData={datas}>\n        <Categories data={categories} />\n      </BoardPage>\n    </Provider>\n  );\n}\n\nexport default PostListPage;\n","import styled from \"styled-components\";\nimport theme from \"../../styles/theme\";\n\nexport const Container = styled.section`\n  display: flex;\n  font-size: 1rem;\n  h1 {\n    width: 200px;\n    font-size: 1.1rem;\n    padding-bottom: 10px;\n    border-bottom: 1px solid var(--textNormal);\n  }\n  li {\n    line-height: 22px;\n    flex-basis: 100px;\n    &:nth-child(1) {\n      flex-basis: 60px;\n    }\n    &:nth-child(4) {\n      flex-grow: 1;\n    }\n  }\n  @media ${theme.mobile} {\n    flex-direction: column;\n    margin: 0 -1.45rem;\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const Table = styled.ul`\n  margin-top: 28px;\n  flex-grow: 1;\n  @media ${theme.mobile} {\n    margin-top: 0;\n  }\n`;\n\nexport const Thead = styled.ul`\n  display: flex;\n  height: 45px;\n  align-items: center;\n  font-weight: 700;\n  border-top: 1px solid var(--textNormal);\n  border-bottom: 1px solid #e9e9e9;\n  li {\n    text-align: center;\n  }\n  @media ${theme.mobile} {\n    display: none;\n  }\n`;\n\nexport const Tbody = styled.ul`\n  display: flex;\n  align-items: center;\n  font-weight: 700;\n  border-bottom: 1px solid #e9e9e9;\n  li {\n    text-align: center;\n    font-weight: 400;\n    &:nth-child(4) {\n      text-align: left;\n      margin-left: 50px;\n    }\n    img {\n      width: 70px;\n      padding: 5%;\n      vertical-align: middle;\n    }\n  }\n  :hover {\n    background: var(--hoverColor);\n  }\n\n  @media ${theme.mobile} {\n    display: inline-block;\n    padding: 1rem 1.45rem;\n    li {\n      display: block;\n      width: calc(100% - 70px);\n      text-align: left;\n      padding-left: 1.45rem;\n      font-size: 1.2rem;\n      font-weight: 700;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      float: right;\n      &::after {\n        content: \"\";\n        display: block;\n        clear: both;\n      }\n      &:nth-child(1) {\n        display: none;\n      }\n      &:nth-child(2) {\n        float: left;\n        padding-left: 0;\n        width: 70px;\n      }\n      &:nth-child(4) {\n        margin-top: 5px;\n        margin-left: 0;\n        font-weight: 400;\n        color: #6300eb;\n        font-size: 0.9rem;\n      }\n      &:nth-child(5) {\n        font-size: 0.9rem;\n        font-weight: 400;\n        color: #666;\n      }\n    }\n  }\n`;\n\nexport const Select = styled.select`\n  width: 70px;\n  margin-top: 10px;\n  margin-left: auto;\n  padding: 3px 7px;\n  border: 1px solid var(--textNormal);\n  font-size: 0.9rem;\n  @media ${theme.mobile} {\n    margin-right: 1.45rem;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Nav = styled.nav`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  margin: 16px;\n`;\n\nexport const Button = styled.button`\n  border: 1px solid var(--textNormal);\n  width: 30px;\n  height: 30px;\n  margin: 0;\n  font-size: 0.9rem;\n\n  &[disabled] {\n    cursor: revert;\n    transform: revert;\n  }\n\n  &[aria-current] {\n    font-weight: bold;\n    cursor: revert;\n    transform: revert;\n  }\n`;\n","import React from \"react\";\nimport { Nav, Button } from \"./styles\";\n\nfunction Pagination({ total, limit, page, setPage }) {\n  const numPages = Math.ceil(total / limit);\n\n  return (\n    <>\n      <Nav>\n        <Button onClick={() => setPage(page - 1)} disabled={page === 1}>\n          &lt;\n        </Button>\n        {Array(numPages)\n          .fill()\n          .map((_, i) => (\n            <Button\n              key={i + 1}\n              onClick={() => setPage(i + 1)}\n              aria-current={page === i + 1 ? \"page\" : null}\n            >\n              {i + 1}\n            </Button>\n          ))}\n        <Button onClick={() => setPage(page + 1)} disabled={page === numPages}>\n          &gt;\n        </Button>\n      </Nav>\n    </>\n  );\n}\n\nexport default Pagination;\n","import React, { useState } from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../../components/Layout\";\nimport { Container, Content, Table, Thead, Tbody, Select } from \"./styles\";\nimport { useCategory } from \"../../hooks/use-site-category\";\nimport Categories from \"../../components/Categories\";\nimport Pagination from \"../../components/Pagination\";\n\nimport { Provider } from \"react-redux\";\nimport { legacy_createStore as createStore } from \"redux\";\n\nconst isBrowser = typeof window !== \"undefined\";\n\nconst themeReducer = (\n  state = isBrowser ? localStorage.getItem(\"theme\") : \"light\",\n  action\n) => {\n  switch (action.type) {\n    case \"CHANGETHEME\":\n      return state === \"dark\" ? \"light\" : \"dark\";\n    default:\n      return state;\n  }\n};\nconst store = createStore(themeReducer);\n\nconst BoardPage = ({ data, location, pageContext, allData }) => {\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const offset = (page - 1) * limit;\n\n  let categories = useCategory();\n  let edges = data?.allMarkdownRemark ? data?.allMarkdownRemark.edges : allData;\n\n  if (data?.allMarkdownRemark) {\n    edges = data.allMarkdownRemark.edges.map((data) => {\n      const newPost = {\n        id: data.node.id,\n        title: data.node.frontmatter.title,\n        category: data.node.frontmatter.category,\n        date: data.node.frontmatter.date,\n        imgPath: data.node.frontmatter.imgPath,\n        contents: data.node.excerpt,\n        slug: data.node?.fields?.slug,\n      };\n      return newPost;\n    });\n  }\n\n  return (\n    <Provider store={store}>\n      <Layout>\n        <Container>\n          <Categories data={categories} />\n          <Content>\n            <Table>\n              <li>\n                <Thead>\n                  <li>번호</li>\n                  <li></li>\n                  <li>분류</li>\n                  <li>제목</li>\n                  <li>날짜</li>\n                </Thead>\n              </li>\n              {edges.slice(offset, offset + limit).map((edge, idx) => {\n                const { id, imgPath, title, category, date, slug } = edge;\n                return (\n                  <li key={id}>\n                    <Link to={`/post${slug}`}>\n                      <Tbody>\n                        <li>{edges.length - idx}</li>\n                        <li>\n                          <img\n                            src={imgPath.childImageSharp.fluid.originalImg}\n                            alt={imgPath.childImageSharp.fluid.originalName}\n                          />\n                        </li>\n                        <li>{category}</li>\n                        <li>{title}</li>\n                        <li>{date}</li>\n                      </Tbody>\n                    </Link>\n                  </li>\n                );\n              })}\n            </Table>\n            <Select\n              type=\"number\"\n              value={limit}\n              onChange={({ target: { value } }) => setLimit(Number(value))}\n            >\n              <option value=\"10\">10</option>\n              <option value=\"20\">20</option>\n              <option value=\"30\">30</option>\n              <option value=\"50\">50</option>\n              <option value=\"100\">100</option>\n            </Select>\n            <Pagination\n              total={edges.length}\n              limit={limit}\n              page={page}\n              setPage={setPage}\n            />\n          </Content>\n        </Container>\n      </Layout>\n    </Provider>\n  );\n};\n\nexport default BoardPage;\n\nexport const PostListQuery = graphql`\n  query ($category: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { in: [$category] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            category\n            imgPath {\n              childImageSharp {\n                fluid {\n                  originalImg\n                  originalName\n                }\n              }\n            }\n          }\n          id\n        }\n      }\n    }\n  }\n`;\n"],"names":["Container","styled","theme","data","postList","group","totalCount","className","Link","to","activeClassName","map","post","id","edges","node","key","fieldValue","replace","useSitePostdata","useStaticQuery","allMarkdownRemark","title","frontmatter","category","date","imgPath","contents","excerpt","slug","fields","useCategory","isBrowser","window","store","createStore","state","action","localStorage","getItem","type","categories","datas","allData","Content","Table","Thead","Tbody","Select","Nav","Button","total","limit","page","setPage","numPages","Math","ceil","onClick","disabled","Array","fill","_","i","location","pageContext","useState","setLimit","offset","Layout","Categories","slice","edge","idx","length","src","childImageSharp","fluid","originalImg","alt","originalName","value","onChange","target","Number"],"sourceRoot":""}